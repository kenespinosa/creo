/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ModelApiResponse;
import io.swagger.model.Platform;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-07-17T08:54:48.546Z")

@Api(value = "platform", description = "the platform API")
public interface PlatformApi {

    @ApiOperation(value = "Create platform", nickname = "createPlatform", notes = "This can only be done by the logged in user.", response = ModelApiResponse.class, tags={ "platform", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ModelApiResponse.class) })
    @RequestMapping(value = "/platform",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<ModelApiResponse> createPlatform(@ApiParam(value = "Created platform" ,required=true )  @Valid @RequestBody Platform body);


    @ApiOperation(value = "Get platform", nickname = "getPlatformById", notes = "", response = Platform.class, tags={ "platform", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Platform.class),
        @ApiResponse(code = 400, message = "Invalid username supplied"),
        @ApiResponse(code = 404, message = "Platform not found") })
    @RequestMapping(value = "/platform/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Platform> getPlatformById(@ApiParam(value = "The platform that needs to be fetched.",required=true) @PathVariable("id") String id);

}
